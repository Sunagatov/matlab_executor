function calculateFdtd(lambdaValue, QValue, QtValue, QTValue, LzConst)
	% электромагнитные константы (пространственные величины измер¤ютс¤ в микронах)
	cc=2.99792458e14;                                          % скорость света в вакууме
	EPSo=8.8541878174e-18;                                     % диэлектрическа¤ константа
	MUo=1.2566370614e-12;                                      % магнитна¤ константа

	% параметры среды
	lambda=lambdaValue;                                        % длина волны
	Lz=LzConst*lambda;                                         % линейные размеры области в длинах волн

	% дискретизаци¤ сетки по пространству
	Q =QValue;            									   % число узлов сеточной области на длину волны (по пространству)
	Qt=QtValue;            									   % число узлов сеточной области на длину волны (по времени)
	QT=QTValue;                								   % "длительность" запускаемого цуга в длинах волн

	Nz=fix(Lz*Q)+1;    										   % длина сеточной области в узлах (по пространству)
	Nt=fix(Qt*QT);        									   % дискретизаци¤ сетки по времени
	hz=Lz/(Nz-1);          									   % шаг по пространству 
	ht=lambda/Qt/cc;  										   % шаг по времени
	Izl=fix(Nz/2);           								   % нахождение источника излучени¤ дл¤ "жесткого" излучающего услови¤

	% константы разностной схемы
	c1=ht/hz/MUo; c4=ht/hz/EPSo; c5=2*pi*ht*cc/lambda;

	% создание полей
	Ex=zeros(1,Nz);  Hy=zeros(1,Nz-1); 
	Eps=epsValue; 										   	   %  распространение в кварце

	A=exp(0.0*i); 											   % комплексна¤ амплитуда падающей волны

	% разностна¤ схема Yee
	for t=1:Nt
	  Hy=Hy-c1*(Ex(2:Nz)-Ex(1:Nz-1));                          % поиск Hy
	  Ex(2:Nz-1)=Ex(2:Nz-1)-c4*(Hy(2:Nz-1)-Hy(1:Nz-2))./Eps(2:Nz-1);   % поиск Ex 

	  Ex(Izl)=real(A*exp(-i*(c5*t-pi/2)));                     % "жесткий" источник
	end

	plot(Ex); grid on;                                         % вывод результата
end	